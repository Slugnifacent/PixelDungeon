# GNU Make project makefile autogenerated by Premake
ifndef config
  config=debug_armeabi-v7a
endif

ifndef verbose
  SILENT = @
endif

CC = gcc
CXX = g++
AR = ar

ifndef RESCOMP
  ifdef WINDRES
    RESCOMP = $(WINDRES)
  else
    RESCOMP = windres
  endif
endif

ifeq ($(config),debug_armeabi-v7a)
  PREMAKE4_PLATFORM_NAME = android_armeabi-v7a
  PREMAKE4_BUILDTARGET_BASENAME = zip
  CC         = $(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/bin/arm-linux-androideabi-gcc --sysroot=$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/sysroot
  CXX        = $(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/bin/arm-linux-androideabi-g++ --sysroot=$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/sysroot
  AR         = $(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/bin/arm-linux-androideabi-ar
  OBJDIR     = ../../../../../$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/Debug/obj/$(PREMAKE4_BUILDTARGET_BASENAME)
  TARGETDIR  = ../../../../../$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/Debug/lib
  TARGET     = $(TARGETDIR)/libzip.a
  DEFINES   += -D_DEBUG
  INCLUDES  += -I. -I../examples -I../lib -I../m4 -I../man -I../regress -I../src -I../xcode -I../xcode/libzip.xcodeproj -I../xcode/libzip.xcodeproj/project.xcworkspace
  ALL_CPPFLAGS  += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS    += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -g -march=armv7-a -mfloat-abi=softfp -fvisibility=hidden
  ALL_CXXFLAGS  += $(CXXFLAGS) $(ALL_CFLAGS) -Wno-invalid-offsetof -fno-rtti -fno-exceptions
  ALL_RESFLAGS  += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  ALL_LDFLAGS   += $(LDFLAGS) -march=armv7-a -mfloat-abi=softfp
  LDDEPS    +=
  LIBS      += $(LDDEPS)
  LINKCMD    = $(AR) -rcs $(TARGET) $(OBJECTS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),profile_armeabi-v7a)
  PREMAKE4_PLATFORM_NAME = android_armeabi-v7a
  PREMAKE4_BUILDTARGET_BASENAME = zip
  CC         = $(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/bin/arm-linux-androideabi-gcc --sysroot=$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/sysroot
  CXX        = $(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/bin/arm-linux-androideabi-g++ --sysroot=$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/sysroot
  AR         = $(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/bin/arm-linux-androideabi-ar
  OBJDIR     = ../../../../../$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/Profile/obj/$(PREMAKE4_BUILDTARGET_BASENAME)
  TARGETDIR  = ../../../../../$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/Profile/lib
  TARGET     = $(TARGETDIR)/libzip.a
  DEFINES   += -DNDEBUG
  INCLUDES  += -I. -I../examples -I../lib -I../m4 -I../man -I../regress -I../src -I../xcode -I../xcode/libzip.xcodeproj -I../xcode/libzip.xcodeproj/project.xcworkspace
  ALL_CPPFLAGS  += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS    += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -g -O3 -march=armv7-a -mfloat-abi=softfp -fvisibility=hidden
  ALL_CXXFLAGS  += $(CXXFLAGS) $(ALL_CFLAGS) -Wno-invalid-offsetof -fno-rtti -fno-exceptions
  ALL_RESFLAGS  += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  ALL_LDFLAGS   += $(LDFLAGS) -march=armv7-a -mfloat-abi=softfp
  LDDEPS    +=
  LIBS      += $(LDDEPS)
  LINKCMD    = $(AR) -rcs $(TARGET) $(OBJECTS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),profile_enableasserts_armeabi-v7a)
  PREMAKE4_PLATFORM_NAME = android_armeabi-v7a
  PREMAKE4_BUILDTARGET_BASENAME = zip
  CC         = $(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/bin/arm-linux-androideabi-gcc --sysroot=$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/sysroot
  CXX        = $(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/bin/arm-linux-androideabi-g++ --sysroot=$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/sysroot
  AR         = $(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/bin/arm-linux-androideabi-ar
  OBJDIR     = ../../../../../$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/Profile_EnableAsserts/obj/$(PREMAKE4_BUILDTARGET_BASENAME)
  TARGETDIR  = ../../../../../$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/Profile_EnableAsserts/lib
  TARGET     = $(TARGETDIR)/libzip.a
  DEFINES   += -DNDEBUG -DAK_ENABLE_ASSERTS
  INCLUDES  += -I. -I../examples -I../lib -I../m4 -I../man -I../regress -I../src -I../xcode -I../xcode/libzip.xcodeproj -I../xcode/libzip.xcodeproj/project.xcworkspace
  ALL_CPPFLAGS  += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS    += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -g -O3 -march=armv7-a -mfloat-abi=softfp -fvisibility=hidden
  ALL_CXXFLAGS  += $(CXXFLAGS) $(ALL_CFLAGS) -Wno-invalid-offsetof -fno-rtti -fno-exceptions
  ALL_RESFLAGS  += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  ALL_LDFLAGS   += $(LDFLAGS) -march=armv7-a -mfloat-abi=softfp
  LDDEPS    +=
  LIBS      += $(LDDEPS)
  LINKCMD    = $(AR) -rcs $(TARGET) $(OBJECTS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),release_armeabi-v7a)
  PREMAKE4_PLATFORM_NAME = android_armeabi-v7a
  PREMAKE4_BUILDTARGET_BASENAME = zip
  CC         = $(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/bin/arm-linux-androideabi-gcc --sysroot=$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/sysroot
  CXX        = $(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/bin/arm-linux-androideabi-g++ --sysroot=$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/sysroot
  AR         = $(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/bin/arm-linux-androideabi-ar
  OBJDIR     = ../../../../../$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/Release/obj/$(PREMAKE4_BUILDTARGET_BASENAME)
  TARGETDIR  = ../../../../../$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/Release/lib
  TARGET     = $(TARGETDIR)/libzip.a
  DEFINES   += -DNDEBUG -DAK_OPTIMIZED
  INCLUDES  += -I. -I../examples -I../lib -I../m4 -I../man -I../regress -I../src -I../xcode -I../xcode/libzip.xcodeproj -I../xcode/libzip.xcodeproj/project.xcworkspace
  ALL_CPPFLAGS  += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS    += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -g -O3 -march=armv7-a -mfloat-abi=softfp -fvisibility=hidden
  ALL_CXXFLAGS  += $(CXXFLAGS) $(ALL_CFLAGS) -Wno-invalid-offsetof -fno-rtti -fno-exceptions
  ALL_RESFLAGS  += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  ALL_LDFLAGS   += $(LDFLAGS) -march=armv7-a -mfloat-abi=softfp
  LDDEPS    +=
  LIBS      += $(LDDEPS)
  LINKCMD    = $(AR) -rcs $(TARGET) $(OBJECTS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),debug_armeabi-v7a-hf)
  PREMAKE4_PLATFORM_NAME = android_armeabi-v7a-hf
  PREMAKE4_BUILDTARGET_BASENAME = zip
  CC         = $(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/bin/arm-linux-androideabi-gcc --sysroot=$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/sysroot -I$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/include/c++/4.8/arm-linux-androideabi -I$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/include/c++/4.8
  CXX        = $(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/bin/arm-linux-androideabi-g++ --sysroot=$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/sysroot -I$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/include/c++/4.8/arm-linux-androideabi -I$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/include/c++/4.8
  AR         = $(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/bin/arm-linux-androideabi-ar
  OBJDIR     = ../../../../../$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/Debug/obj/$(PREMAKE4_BUILDTARGET_BASENAME)
  TARGETDIR  = ../../../../../$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/Debug/lib
  TARGET     = $(TARGETDIR)/libzip.a
  DEFINES   += -D_DEBUG
  INCLUDES  += -I. -I../examples -I../lib -I../m4 -I../man -I../regress -I../src -I../xcode -I../xcode/libzip.xcodeproj -I../xcode/libzip.xcodeproj/project.xcworkspace
  ALL_CPPFLAGS  += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS    += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -g -march=armv7-a -mhard-float -fvisibility=hidden
  ALL_CXXFLAGS  += $(CXXFLAGS) $(ALL_CFLAGS) -Wno-invalid-offsetof -fno-rtti -fno-exceptions
  ALL_RESFLAGS  += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  ALL_LDFLAGS   += $(LDFLAGS) -march=armv7-a -mhard-float -Wl,--no-warn-mismatch
  LDDEPS    +=
  LIBS      += $(LDDEPS)
  LINKCMD    = $(AR) -rcs $(TARGET) $(OBJECTS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),profile_armeabi-v7a-hf)
  PREMAKE4_PLATFORM_NAME = android_armeabi-v7a-hf
  PREMAKE4_BUILDTARGET_BASENAME = zip
  CC         = $(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/bin/arm-linux-androideabi-gcc --sysroot=$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/sysroot -I$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/include/c++/4.8/arm-linux-androideabi -I$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/include/c++/4.8
  CXX        = $(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/bin/arm-linux-androideabi-g++ --sysroot=$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/sysroot -I$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/include/c++/4.8/arm-linux-androideabi -I$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/include/c++/4.8
  AR         = $(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/bin/arm-linux-androideabi-ar
  OBJDIR     = ../../../../../$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/Profile/obj/$(PREMAKE4_BUILDTARGET_BASENAME)
  TARGETDIR  = ../../../../../$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/Profile/lib
  TARGET     = $(TARGETDIR)/libzip.a
  DEFINES   += -DNDEBUG
  INCLUDES  += -I. -I../examples -I../lib -I../m4 -I../man -I../regress -I../src -I../xcode -I../xcode/libzip.xcodeproj -I../xcode/libzip.xcodeproj/project.xcworkspace
  ALL_CPPFLAGS  += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS    += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -g -O3 -march=armv7-a -mhard-float -fvisibility=hidden
  ALL_CXXFLAGS  += $(CXXFLAGS) $(ALL_CFLAGS) -Wno-invalid-offsetof -fno-rtti -fno-exceptions
  ALL_RESFLAGS  += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  ALL_LDFLAGS   += $(LDFLAGS) -march=armv7-a -mhard-float -Wl,--no-warn-mismatch
  LDDEPS    +=
  LIBS      += $(LDDEPS)
  LINKCMD    = $(AR) -rcs $(TARGET) $(OBJECTS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),profile_enableasserts_armeabi-v7a-hf)
  PREMAKE4_PLATFORM_NAME = android_armeabi-v7a-hf
  PREMAKE4_BUILDTARGET_BASENAME = zip
  CC         = $(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/bin/arm-linux-androideabi-gcc --sysroot=$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/sysroot -I$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/include/c++/4.8/arm-linux-androideabi -I$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/include/c++/4.8
  CXX        = $(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/bin/arm-linux-androideabi-g++ --sysroot=$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/sysroot -I$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/include/c++/4.8/arm-linux-androideabi -I$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/include/c++/4.8
  AR         = $(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/bin/arm-linux-androideabi-ar
  OBJDIR     = ../../../../../$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/Profile_EnableAsserts/obj/$(PREMAKE4_BUILDTARGET_BASENAME)
  TARGETDIR  = ../../../../../$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/Profile_EnableAsserts/lib
  TARGET     = $(TARGETDIR)/libzip.a
  DEFINES   += -DNDEBUG -DAK_ENABLE_ASSERTS
  INCLUDES  += -I. -I../examples -I../lib -I../m4 -I../man -I../regress -I../src -I../xcode -I../xcode/libzip.xcodeproj -I../xcode/libzip.xcodeproj/project.xcworkspace
  ALL_CPPFLAGS  += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS    += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -g -O3 -march=armv7-a -mhard-float -fvisibility=hidden
  ALL_CXXFLAGS  += $(CXXFLAGS) $(ALL_CFLAGS) -Wno-invalid-offsetof -fno-rtti -fno-exceptions
  ALL_RESFLAGS  += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  ALL_LDFLAGS   += $(LDFLAGS) -march=armv7-a -mhard-float -Wl,--no-warn-mismatch
  LDDEPS    +=
  LIBS      += $(LDDEPS)
  LINKCMD    = $(AR) -rcs $(TARGET) $(OBJECTS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),release_armeabi-v7a-hf)
  PREMAKE4_PLATFORM_NAME = android_armeabi-v7a-hf
  PREMAKE4_BUILDTARGET_BASENAME = zip
  CC         = $(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/bin/arm-linux-androideabi-gcc --sysroot=$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/sysroot -I$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/include/c++/4.8/arm-linux-androideabi -I$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/include/c++/4.8
  CXX        = $(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/bin/arm-linux-androideabi-g++ --sysroot=$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/sysroot -I$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/include/c++/4.8/arm-linux-androideabi -I$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/include/c++/4.8
  AR         = $(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/bin/arm-linux-androideabi-ar
  OBJDIR     = ../../../../../$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/Release/obj/$(PREMAKE4_BUILDTARGET_BASENAME)
  TARGETDIR  = ../../../../../$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/Release/lib
  TARGET     = $(TARGETDIR)/libzip.a
  DEFINES   += -DNDEBUG -DAK_OPTIMIZED
  INCLUDES  += -I. -I../examples -I../lib -I../m4 -I../man -I../regress -I../src -I../xcode -I../xcode/libzip.xcodeproj -I../xcode/libzip.xcodeproj/project.xcworkspace
  ALL_CPPFLAGS  += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS    += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -g -O3 -march=armv7-a -mhard-float -fvisibility=hidden
  ALL_CXXFLAGS  += $(CXXFLAGS) $(ALL_CFLAGS) -Wno-invalid-offsetof -fno-rtti -fno-exceptions
  ALL_RESFLAGS  += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  ALL_LDFLAGS   += $(LDFLAGS) -march=armv7-a -mhard-float -Wl,--no-warn-mismatch
  LDDEPS    +=
  LIBS      += $(LDDEPS)
  LINKCMD    = $(AR) -rcs $(TARGET) $(OBJECTS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),debug_x86)
  PREMAKE4_PLATFORM_NAME = android_x86
  PREMAKE4_BUILDTARGET_BASENAME = zip
  CC         = $(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/bin/i686-linux-android-gcc --sysroot=$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/sysroot -I$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/include/c++/4.8/i686-linux-android -I$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/include/c++/4.8
  CXX        = $(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/bin/i686-linux-android-g++ --sysroot=$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/sysroot -I$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/include/c++/4.8/i686-linux-android -I$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/include/c++/4.8
  AR         = $(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/bin/i686-linux-android-ar
  OBJDIR     = ../../../../../$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/Debug/obj/$(PREMAKE4_BUILDTARGET_BASENAME)
  TARGETDIR  = ../../../../../$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/Debug/lib
  TARGET     = $(TARGETDIR)/libzip.a
  DEFINES   += -D_DEBUG
  INCLUDES  += -I. -I../examples -I../lib -I../m4 -I../man -I../regress -I../src -I../xcode -I../xcode/libzip.xcodeproj -I../xcode/libzip.xcodeproj/project.xcworkspace
  ALL_CPPFLAGS  += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS    += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -g -std=c++11 -fvisibility=hidden
  ALL_CXXFLAGS  += $(CXXFLAGS) $(ALL_CFLAGS) -Wno-invalid-offsetof -fno-rtti -fno-exceptions
  ALL_RESFLAGS  += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  ALL_LDFLAGS   += $(LDFLAGS) -std=c++11
  LDDEPS    +=
  LIBS      += $(LDDEPS)
  LINKCMD    = $(AR) -rcs $(TARGET) $(OBJECTS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),profile_x86)
  PREMAKE4_PLATFORM_NAME = android_x86
  PREMAKE4_BUILDTARGET_BASENAME = zip
  CC         = $(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/bin/i686-linux-android-gcc --sysroot=$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/sysroot -I$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/include/c++/4.8/i686-linux-android -I$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/include/c++/4.8
  CXX        = $(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/bin/i686-linux-android-g++ --sysroot=$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/sysroot -I$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/include/c++/4.8/i686-linux-android -I$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/include/c++/4.8
  AR         = $(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/bin/i686-linux-android-ar
  OBJDIR     = ../../../../../$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/Profile/obj/$(PREMAKE4_BUILDTARGET_BASENAME)
  TARGETDIR  = ../../../../../$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/Profile/lib
  TARGET     = $(TARGETDIR)/libzip.a
  DEFINES   += -DNDEBUG
  INCLUDES  += -I. -I../examples -I../lib -I../m4 -I../man -I../regress -I../src -I../xcode -I../xcode/libzip.xcodeproj -I../xcode/libzip.xcodeproj/project.xcworkspace
  ALL_CPPFLAGS  += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS    += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -g -O3 -std=c++11 -fvisibility=hidden
  ALL_CXXFLAGS  += $(CXXFLAGS) $(ALL_CFLAGS) -Wno-invalid-offsetof -fno-rtti -fno-exceptions
  ALL_RESFLAGS  += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  ALL_LDFLAGS   += $(LDFLAGS) -std=c++11
  LDDEPS    +=
  LIBS      += $(LDDEPS)
  LINKCMD    = $(AR) -rcs $(TARGET) $(OBJECTS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),profile_enableasserts_x86)
  PREMAKE4_PLATFORM_NAME = android_x86
  PREMAKE4_BUILDTARGET_BASENAME = zip
  CC         = $(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/bin/i686-linux-android-gcc --sysroot=$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/sysroot -I$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/include/c++/4.8/i686-linux-android -I$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/include/c++/4.8
  CXX        = $(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/bin/i686-linux-android-g++ --sysroot=$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/sysroot -I$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/include/c++/4.8/i686-linux-android -I$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/include/c++/4.8
  AR         = $(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/bin/i686-linux-android-ar
  OBJDIR     = ../../../../../$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/Profile_EnableAsserts/obj/$(PREMAKE4_BUILDTARGET_BASENAME)
  TARGETDIR  = ../../../../../$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/Profile_EnableAsserts/lib
  TARGET     = $(TARGETDIR)/libzip.a
  DEFINES   += -DNDEBUG -DAK_ENABLE_ASSERTS
  INCLUDES  += -I. -I../examples -I../lib -I../m4 -I../man -I../regress -I../src -I../xcode -I../xcode/libzip.xcodeproj -I../xcode/libzip.xcodeproj/project.xcworkspace
  ALL_CPPFLAGS  += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS    += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -g -O3 -std=c++11 -fvisibility=hidden
  ALL_CXXFLAGS  += $(CXXFLAGS) $(ALL_CFLAGS) -Wno-invalid-offsetof -fno-rtti -fno-exceptions
  ALL_RESFLAGS  += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  ALL_LDFLAGS   += $(LDFLAGS) -std=c++11
  LDDEPS    +=
  LIBS      += $(LDDEPS)
  LINKCMD    = $(AR) -rcs $(TARGET) $(OBJECTS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),release_x86)
  PREMAKE4_PLATFORM_NAME = android_x86
  PREMAKE4_BUILDTARGET_BASENAME = zip
  CC         = $(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/bin/i686-linux-android-gcc --sysroot=$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/sysroot -I$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/include/c++/4.8/i686-linux-android -I$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/include/c++/4.8
  CXX        = $(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/bin/i686-linux-android-g++ --sysroot=$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/sysroot -I$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/include/c++/4.8/i686-linux-android -I$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/include/c++/4.8
  AR         = $(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/bin/i686-linux-android-ar
  OBJDIR     = ../../../../../$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/Release/obj/$(PREMAKE4_BUILDTARGET_BASENAME)
  TARGETDIR  = ../../../../../$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/Release/lib
  TARGET     = $(TARGETDIR)/libzip.a
  DEFINES   += -DNDEBUG -DAK_OPTIMIZED
  INCLUDES  += -I. -I../examples -I../lib -I../m4 -I../man -I../regress -I../src -I../xcode -I../xcode/libzip.xcodeproj -I../xcode/libzip.xcodeproj/project.xcworkspace
  ALL_CPPFLAGS  += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS    += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -g -O3 -std=c++11 -fvisibility=hidden
  ALL_CXXFLAGS  += $(CXXFLAGS) $(ALL_CFLAGS) -Wno-invalid-offsetof -fno-rtti -fno-exceptions
  ALL_RESFLAGS  += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  ALL_LDFLAGS   += $(LDFLAGS) -std=c++11
  LDDEPS    +=
  LIBS      += $(LDDEPS)
  LINKCMD    = $(AR) -rcs $(TARGET) $(OBJECTS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),debug_arm64-v8a)
  PREMAKE4_PLATFORM_NAME = android_arm64-v8a
  PREMAKE4_BUILDTARGET_BASENAME = zip
  CC         = $(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/bin/aarch64-linux-android-gcc --sysroot=$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/sysroot
  CXX        = $(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/bin/aarch64-linux-android-g++ --sysroot=$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/sysroot
  AR         = $(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/bin/aarch64-linux-android-ar
  OBJDIR     = ../../../../../$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/Debug/obj/$(PREMAKE4_BUILDTARGET_BASENAME)
  TARGETDIR  = ../../../../../$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/Debug/lib
  TARGET     = $(TARGETDIR)/libzip.a
  DEFINES   += -D_DEBUG
  INCLUDES  += -I. -I../examples -I../lib -I../m4 -I../man -I../regress -I../src -I../xcode -I../xcode/libzip.xcodeproj -I../xcode/libzip.xcodeproj/project.xcworkspace
  ALL_CPPFLAGS  += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS    += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -g -march=armv8-a -fvisibility=hidden
  ALL_CXXFLAGS  += $(CXXFLAGS) $(ALL_CFLAGS) -Wno-invalid-offsetof -fno-rtti -fno-exceptions
  ALL_RESFLAGS  += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  ALL_LDFLAGS   += $(LDFLAGS) -march=armv8-a
  LDDEPS    +=
  LIBS      += $(LDDEPS)
  LINKCMD    = $(AR) -rcs $(TARGET) $(OBJECTS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),profile_arm64-v8a)
  PREMAKE4_PLATFORM_NAME = android_arm64-v8a
  PREMAKE4_BUILDTARGET_BASENAME = zip
  CC         = $(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/bin/aarch64-linux-android-gcc --sysroot=$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/sysroot
  CXX        = $(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/bin/aarch64-linux-android-g++ --sysroot=$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/sysroot
  AR         = $(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/bin/aarch64-linux-android-ar
  OBJDIR     = ../../../../../$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/Profile/obj/$(PREMAKE4_BUILDTARGET_BASENAME)
  TARGETDIR  = ../../../../../$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/Profile/lib
  TARGET     = $(TARGETDIR)/libzip.a
  DEFINES   += -DNDEBUG
  INCLUDES  += -I. -I../examples -I../lib -I../m4 -I../man -I../regress -I../src -I../xcode -I../xcode/libzip.xcodeproj -I../xcode/libzip.xcodeproj/project.xcworkspace
  ALL_CPPFLAGS  += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS    += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -g -O3 -march=armv8-a -fvisibility=hidden
  ALL_CXXFLAGS  += $(CXXFLAGS) $(ALL_CFLAGS) -Wno-invalid-offsetof -fno-rtti -fno-exceptions
  ALL_RESFLAGS  += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  ALL_LDFLAGS   += $(LDFLAGS) -march=armv8-a
  LDDEPS    +=
  LIBS      += $(LDDEPS)
  LINKCMD    = $(AR) -rcs $(TARGET) $(OBJECTS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),profile_enableasserts_arm64-v8a)
  PREMAKE4_PLATFORM_NAME = android_arm64-v8a
  PREMAKE4_BUILDTARGET_BASENAME = zip
  CC         = $(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/bin/aarch64-linux-android-gcc --sysroot=$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/sysroot
  CXX        = $(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/bin/aarch64-linux-android-g++ --sysroot=$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/sysroot
  AR         = $(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/bin/aarch64-linux-android-ar
  OBJDIR     = ../../../../../$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/Profile_EnableAsserts/obj/$(PREMAKE4_BUILDTARGET_BASENAME)
  TARGETDIR  = ../../../../../$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/Profile_EnableAsserts/lib
  TARGET     = $(TARGETDIR)/libzip.a
  DEFINES   += -DNDEBUG -DAK_ENABLE_ASSERTS
  INCLUDES  += -I. -I../examples -I../lib -I../m4 -I../man -I../regress -I../src -I../xcode -I../xcode/libzip.xcodeproj -I../xcode/libzip.xcodeproj/project.xcworkspace
  ALL_CPPFLAGS  += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS    += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -g -O3 -march=armv8-a -fvisibility=hidden
  ALL_CXXFLAGS  += $(CXXFLAGS) $(ALL_CFLAGS) -Wno-invalid-offsetof -fno-rtti -fno-exceptions
  ALL_RESFLAGS  += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  ALL_LDFLAGS   += $(LDFLAGS) -march=armv8-a
  LDDEPS    +=
  LIBS      += $(LDDEPS)
  LINKCMD    = $(AR) -rcs $(TARGET) $(OBJECTS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),release_arm64-v8a)
  PREMAKE4_PLATFORM_NAME = android_arm64-v8a
  PREMAKE4_BUILDTARGET_BASENAME = zip
  CC         = $(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/bin/aarch64-linux-android-gcc --sysroot=$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/sysroot
  CXX        = $(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/bin/aarch64-linux-android-g++ --sysroot=$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/sysroot
  AR         = $(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/bin/aarch64-linux-android-ar
  OBJDIR     = ../../../../../$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/Release/obj/$(PREMAKE4_BUILDTARGET_BASENAME)
  TARGETDIR  = ../../../../../$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/Release/lib
  TARGET     = $(TARGETDIR)/libzip.a
  DEFINES   += -DNDEBUG -DAK_OPTIMIZED
  INCLUDES  += -I. -I../examples -I../lib -I../m4 -I../man -I../regress -I../src -I../xcode -I../xcode/libzip.xcodeproj -I../xcode/libzip.xcodeproj/project.xcworkspace
  ALL_CPPFLAGS  += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS    += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -g -O3 -march=armv8-a -fvisibility=hidden
  ALL_CXXFLAGS  += $(CXXFLAGS) $(ALL_CFLAGS) -Wno-invalid-offsetof -fno-rtti -fno-exceptions
  ALL_RESFLAGS  += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  ALL_LDFLAGS   += $(LDFLAGS) -march=armv8-a
  LDDEPS    +=
  LIBS      += $(LDDEPS)
  LINKCMD    = $(AR) -rcs $(TARGET) $(OBJECTS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),debug_x86_64)
  PREMAKE4_PLATFORM_NAME = android_x64
  PREMAKE4_BUILDTARGET_BASENAME = zip
  CC         = $(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/bin/x86_64-linux-android-gcc --sysroot=$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/sysroot -I$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/include/c++/4.9/x86_64-linux-android -I$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/include/c++/4.9
  CXX        = $(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/bin/x86_64-linux-android-g++ --sysroot=$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/sysroot -I$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/include/c++/4.9/x86_64-linux-android -I$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/include/c++/4.9
  AR         = $(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/bin/x86_64-linux-android-ar
  OBJDIR     = ../../../../../$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/Debug/obj/$(PREMAKE4_BUILDTARGET_BASENAME)
  TARGETDIR  = ../../../../../$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/Debug/lib
  TARGET     = $(TARGETDIR)/libzip.a
  DEFINES   += -D_DEBUG
  INCLUDES  += -I. -I../examples -I../lib -I../m4 -I../man -I../regress -I../src -I../xcode -I../xcode/libzip.xcodeproj -I../xcode/libzip.xcodeproj/project.xcworkspace
  ALL_CPPFLAGS  += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS    += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -g -std=c++11 -fvisibility=hidden
  ALL_CXXFLAGS  += $(CXXFLAGS) $(ALL_CFLAGS) -Wno-invalid-offsetof -fno-rtti -fno-exceptions
  ALL_RESFLAGS  += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  ALL_LDFLAGS   += $(LDFLAGS) -std=c++11
  LDDEPS    +=
  LIBS      += $(LDDEPS)
  LINKCMD    = $(AR) -rcs $(TARGET) $(OBJECTS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),profile_x86_64)
  PREMAKE4_PLATFORM_NAME = android_x64
  PREMAKE4_BUILDTARGET_BASENAME = zip
  CC         = $(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/bin/x86_64-linux-android-gcc --sysroot=$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/sysroot -I$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/include/c++/4.9/x86_64-linux-android -I$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/include/c++/4.9
  CXX        = $(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/bin/x86_64-linux-android-g++ --sysroot=$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/sysroot -I$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/include/c++/4.9/x86_64-linux-android -I$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/include/c++/4.9
  AR         = $(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/bin/x86_64-linux-android-ar
  OBJDIR     = ../../../../../$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/Profile/obj/$(PREMAKE4_BUILDTARGET_BASENAME)
  TARGETDIR  = ../../../../../$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/Profile/lib
  TARGET     = $(TARGETDIR)/libzip.a
  DEFINES   += -DNDEBUG
  INCLUDES  += -I. -I../examples -I../lib -I../m4 -I../man -I../regress -I../src -I../xcode -I../xcode/libzip.xcodeproj -I../xcode/libzip.xcodeproj/project.xcworkspace
  ALL_CPPFLAGS  += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS    += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -g -O3 -std=c++11 -fvisibility=hidden
  ALL_CXXFLAGS  += $(CXXFLAGS) $(ALL_CFLAGS) -Wno-invalid-offsetof -fno-rtti -fno-exceptions
  ALL_RESFLAGS  += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  ALL_LDFLAGS   += $(LDFLAGS) -std=c++11
  LDDEPS    +=
  LIBS      += $(LDDEPS)
  LINKCMD    = $(AR) -rcs $(TARGET) $(OBJECTS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),profile_enableasserts_x86_64)
  PREMAKE4_PLATFORM_NAME = android_x64
  PREMAKE4_BUILDTARGET_BASENAME = zip
  CC         = $(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/bin/x86_64-linux-android-gcc --sysroot=$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/sysroot -I$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/include/c++/4.9/x86_64-linux-android -I$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/include/c++/4.9
  CXX        = $(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/bin/x86_64-linux-android-g++ --sysroot=$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/sysroot -I$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/include/c++/4.9/x86_64-linux-android -I$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/include/c++/4.9
  AR         = $(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/bin/x86_64-linux-android-ar
  OBJDIR     = ../../../../../$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/Profile_EnableAsserts/obj/$(PREMAKE4_BUILDTARGET_BASENAME)
  TARGETDIR  = ../../../../../$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/Profile_EnableAsserts/lib
  TARGET     = $(TARGETDIR)/libzip.a
  DEFINES   += -DNDEBUG -DAK_ENABLE_ASSERTS
  INCLUDES  += -I. -I../examples -I../lib -I../m4 -I../man -I../regress -I../src -I../xcode -I../xcode/libzip.xcodeproj -I../xcode/libzip.xcodeproj/project.xcworkspace
  ALL_CPPFLAGS  += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS    += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -g -O3 -std=c++11 -fvisibility=hidden
  ALL_CXXFLAGS  += $(CXXFLAGS) $(ALL_CFLAGS) -Wno-invalid-offsetof -fno-rtti -fno-exceptions
  ALL_RESFLAGS  += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  ALL_LDFLAGS   += $(LDFLAGS) -std=c++11
  LDDEPS    +=
  LIBS      += $(LDDEPS)
  LINKCMD    = $(AR) -rcs $(TARGET) $(OBJECTS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),release_x86_64)
  PREMAKE4_PLATFORM_NAME = android_x64
  PREMAKE4_BUILDTARGET_BASENAME = zip
  CC         = $(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/bin/x86_64-linux-android-gcc --sysroot=$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/sysroot -I$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/include/c++/4.9/x86_64-linux-android -I$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/include/c++/4.9
  CXX        = $(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/bin/x86_64-linux-android-g++ --sysroot=$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/sysroot -I$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/include/c++/4.9/x86_64-linux-android -I$(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/include/c++/4.9
  AR         = $(WWISE_SDK_ROOT)/source/Build/Android/$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/bin/x86_64-linux-android-ar
  OBJDIR     = ../../../../../$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/Release/obj/$(PREMAKE4_BUILDTARGET_BASENAME)
  TARGETDIR  = ../../../../../$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/Release/lib
  TARGET     = $(TARGETDIR)/libzip.a
  DEFINES   += -DNDEBUG -DAK_OPTIMIZED
  INCLUDES  += -I. -I../examples -I../lib -I../m4 -I../man -I../regress -I../src -I../xcode -I../xcode/libzip.xcodeproj -I../xcode/libzip.xcodeproj/project.xcworkspace
  ALL_CPPFLAGS  += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS    += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -g -O3 -std=c++11 -fvisibility=hidden
  ALL_CXXFLAGS  += $(CXXFLAGS) $(ALL_CFLAGS) -Wno-invalid-offsetof -fno-rtti -fno-exceptions
  ALL_RESFLAGS  += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  ALL_LDFLAGS   += $(LDFLAGS) -std=c++11
  LDDEPS    +=
  LIBS      += $(LDDEPS)
  LINKCMD    = $(AR) -rcs $(TARGET) $(OBJECTS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),debug)
  PREMAKE4_PLATFORM_NAME = Native
  PREMAKE4_BUILDTARGET_BASENAME = zip
  OBJDIR     = ../../../../../$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/Debug/obj/$(PREMAKE4_BUILDTARGET_BASENAME)
  TARGETDIR  = ../../../../../$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/Debug/lib
  TARGET     = $(TARGETDIR)/libzip.a
  DEFINES   += -D_DEBUG
  INCLUDES  += -I. -I../examples -I../lib -I../m4 -I../man -I../regress -I../src -I../xcode -I../xcode/libzip.xcodeproj -I../xcode/libzip.xcodeproj/project.xcworkspace
  ALL_CPPFLAGS  += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS    += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -g -fvisibility=hidden
  ALL_CXXFLAGS  += $(CXXFLAGS) $(ALL_CFLAGS) -Wno-invalid-offsetof -fno-rtti -fno-exceptions
  ALL_RESFLAGS  += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  ALL_LDFLAGS   += $(LDFLAGS)
  LDDEPS    +=
  LIBS      += $(LDDEPS)
  LINKCMD    = $(AR) -rcs $(TARGET) $(OBJECTS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),profile)
  PREMAKE4_PLATFORM_NAME = Native
  PREMAKE4_BUILDTARGET_BASENAME = zip
  OBJDIR     = ../../../../../$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/Profile/obj/$(PREMAKE4_BUILDTARGET_BASENAME)
  TARGETDIR  = ../../../../../$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/Profile/lib
  TARGET     = $(TARGETDIR)/libzip.a
  DEFINES   += -DNDEBUG
  INCLUDES  += -I. -I../examples -I../lib -I../m4 -I../man -I../regress -I../src -I../xcode -I../xcode/libzip.xcodeproj -I../xcode/libzip.xcodeproj/project.xcworkspace
  ALL_CPPFLAGS  += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS    += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -g -O3 -fvisibility=hidden
  ALL_CXXFLAGS  += $(CXXFLAGS) $(ALL_CFLAGS) -Wno-invalid-offsetof -fno-rtti -fno-exceptions
  ALL_RESFLAGS  += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  ALL_LDFLAGS   += $(LDFLAGS)
  LDDEPS    +=
  LIBS      += $(LDDEPS)
  LINKCMD    = $(AR) -rcs $(TARGET) $(OBJECTS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),profile_enableasserts)
  PREMAKE4_PLATFORM_NAME = Native
  PREMAKE4_BUILDTARGET_BASENAME = zip
  OBJDIR     = ../../../../../$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/Profile_EnableAsserts/obj/$(PREMAKE4_BUILDTARGET_BASENAME)
  TARGETDIR  = ../../../../../$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/Profile_EnableAsserts/lib
  TARGET     = $(TARGETDIR)/libzip.a
  DEFINES   += -DNDEBUG -DAK_ENABLE_ASSERTS
  INCLUDES  += -I. -I../examples -I../lib -I../m4 -I../man -I../regress -I../src -I../xcode -I../xcode/libzip.xcodeproj -I../xcode/libzip.xcodeproj/project.xcworkspace
  ALL_CPPFLAGS  += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS    += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -g -O3 -fvisibility=hidden
  ALL_CXXFLAGS  += $(CXXFLAGS) $(ALL_CFLAGS) -Wno-invalid-offsetof -fno-rtti -fno-exceptions
  ALL_RESFLAGS  += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  ALL_LDFLAGS   += $(LDFLAGS)
  LDDEPS    +=
  LIBS      += $(LDDEPS)
  LINKCMD    = $(AR) -rcs $(TARGET) $(OBJECTS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),release)
  PREMAKE4_PLATFORM_NAME = Native
  PREMAKE4_BUILDTARGET_BASENAME = zip
  OBJDIR     = ../../../../../$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/Release/obj/$(PREMAKE4_BUILDTARGET_BASENAME)
  TARGETDIR  = ../../../../../$(ANDROID_PLATFORM)_$(ANDROID_ARCH)/Release/lib
  TARGET     = $(TARGETDIR)/libzip.a
  DEFINES   += -DNDEBUG -DAK_OPTIMIZED
  INCLUDES  += -I. -I../examples -I../lib -I../m4 -I../man -I../regress -I../src -I../xcode -I../xcode/libzip.xcodeproj -I../xcode/libzip.xcodeproj/project.xcworkspace
  ALL_CPPFLAGS  += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS    += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -g -O3 -fvisibility=hidden
  ALL_CXXFLAGS  += $(CXXFLAGS) $(ALL_CFLAGS) -Wno-invalid-offsetof -fno-rtti -fno-exceptions
  ALL_RESFLAGS  += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  ALL_LDFLAGS   += $(LDFLAGS)
  LDDEPS    +=
  LIBS      += $(LDDEPS)
  LINKCMD    = $(AR) -rcs $(TARGET) $(OBJECTS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

OBJECTS := \
	$(OBJDIR)/mkstemp.o \
	$(OBJDIR)/zip_add.o \
	$(OBJDIR)/zip_add_dir.o \
	$(OBJDIR)/zip_add_entry.o \
	$(OBJDIR)/zip_buffer.o \
	$(OBJDIR)/zip_close.o \
	$(OBJDIR)/zip_delete.o \
	$(OBJDIR)/zip_dirent.o \
	$(OBJDIR)/zip_dir_add.o \
	$(OBJDIR)/zip_discard.o \
	$(OBJDIR)/zip_entry.o \
	$(OBJDIR)/zip_error.o \
	$(OBJDIR)/zip_error_clear.o \
	$(OBJDIR)/zip_error_get.o \
	$(OBJDIR)/zip_error_get_sys_type.o \
	$(OBJDIR)/zip_error_strerror.o \
	$(OBJDIR)/zip_error_to_str.o \
	$(OBJDIR)/zip_err_str.o \
	$(OBJDIR)/zip_extra_field.o \
	$(OBJDIR)/zip_extra_field_api.o \
	$(OBJDIR)/zip_fclose.o \
	$(OBJDIR)/zip_fdopen.o \
	$(OBJDIR)/zip_filerange_crc.o \
	$(OBJDIR)/zip_file_add.o \
	$(OBJDIR)/zip_file_error_clear.o \
	$(OBJDIR)/zip_file_error_get.o \
	$(OBJDIR)/zip_file_get_comment.o \
	$(OBJDIR)/zip_file_get_external_attributes.o \
	$(OBJDIR)/zip_file_get_offset.o \
	$(OBJDIR)/zip_file_rename.o \
	$(OBJDIR)/zip_file_replace.o \
	$(OBJDIR)/zip_file_set_comment.o \
	$(OBJDIR)/zip_file_set_external_attributes.o \
	$(OBJDIR)/zip_file_set_mtime.o \
	$(OBJDIR)/zip_file_strerror.o \
	$(OBJDIR)/zip_fopen.o \
	$(OBJDIR)/zip_fopen_encrypted.o \
	$(OBJDIR)/zip_fopen_index.o \
	$(OBJDIR)/zip_fopen_index_encrypted.o \
	$(OBJDIR)/zip_fread.o \
	$(OBJDIR)/zip_get_archive_comment.o \
	$(OBJDIR)/zip_get_archive_flag.o \
	$(OBJDIR)/zip_get_compression_implementation.o \
	$(OBJDIR)/zip_get_encryption_implementation.o \
	$(OBJDIR)/zip_get_file_comment.o \
	$(OBJDIR)/zip_get_name.o \
	$(OBJDIR)/zip_get_num_entries.o \
	$(OBJDIR)/zip_get_num_files.o \
	$(OBJDIR)/zip_io_util.o \
	$(OBJDIR)/zip_memdup.o \
	$(OBJDIR)/zip_name_locate.o \
	$(OBJDIR)/zip_new.o \
	$(OBJDIR)/zip_open.o \
	$(OBJDIR)/zip_rename.o \
	$(OBJDIR)/zip_replace.o \
	$(OBJDIR)/zip_set_archive_comment.o \
	$(OBJDIR)/zip_set_archive_flag.o \
	$(OBJDIR)/zip_set_default_password.o \
	$(OBJDIR)/zip_set_file_comment.o \
	$(OBJDIR)/zip_set_file_compression.o \
	$(OBJDIR)/zip_set_name.o \
	$(OBJDIR)/zip_source_begin_write.o \
	$(OBJDIR)/zip_source_buffer.o \
	$(OBJDIR)/zip_source_call.o \
	$(OBJDIR)/zip_source_close.o \
	$(OBJDIR)/zip_source_commit_write.o \
	$(OBJDIR)/zip_source_crc.o \
	$(OBJDIR)/zip_source_deflate.o \
	$(OBJDIR)/zip_source_error.o \
	$(OBJDIR)/zip_source_file.o \
	$(OBJDIR)/zip_source_filep.o \
	$(OBJDIR)/zip_source_free.o \
	$(OBJDIR)/zip_source_function.o \
	$(OBJDIR)/zip_source_is_deleted.o \
	$(OBJDIR)/zip_source_layered.o \
	$(OBJDIR)/zip_source_open.o \
	$(OBJDIR)/zip_source_pkware.o \
	$(OBJDIR)/zip_source_read.o \
	$(OBJDIR)/zip_source_remove.o \
	$(OBJDIR)/zip_source_rollback_write.o \
	$(OBJDIR)/zip_source_seek.o \
	$(OBJDIR)/zip_source_seek_write.o \
	$(OBJDIR)/zip_source_stat.o \
	$(OBJDIR)/zip_source_supports.o \
	$(OBJDIR)/zip_source_tell.o \
	$(OBJDIR)/zip_source_tell_write.o \
	$(OBJDIR)/zip_source_window.o \
	$(OBJDIR)/zip_source_write.o \
	$(OBJDIR)/zip_source_zip.o \
	$(OBJDIR)/zip_source_zip_new.o \
	$(OBJDIR)/zip_stat.o \
	$(OBJDIR)/zip_stat_index.o \
	$(OBJDIR)/zip_stat_init.o \
	$(OBJDIR)/zip_strerror.o \
	$(OBJDIR)/zip_string.o \
	$(OBJDIR)/zip_unchange.o \
	$(OBJDIR)/zip_unchange_all.o \
	$(OBJDIR)/zip_unchange_archive.o \
	$(OBJDIR)/zip_unchange_data.o \
	$(OBJDIR)/zip_utf-8.o \

RESOURCES := \

SHELLTYPE := msdos
ifeq (,$(ComSpec)$(COMSPEC))
  SHELLTYPE := posix
endif
ifeq (/bin,$(findstring /bin,$(SHELL)))
  SHELLTYPE := posix
endif

.PHONY: clean prebuild prelink

all: $(TARGETDIR) $(OBJDIR) prebuild prelink $(TARGET)
	@:

$(TARGET): $(GCH) $(OBJECTS) $(LDDEPS) $(RESOURCES)
	@echo Linking libzipAndroid
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning libzipAndroid
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild:
	$(PREBUILDCMDS)

prelink:
	$(PRELINKCMDS)

ifneq (,$(PCH))
$(GCH): $(PCH)
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -MMD -MP $(DEFINES) $(INCLUDES) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
endif

$(OBJDIR)/mkstemp.o: ../lib/mkstemp.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_add.o: ../lib/zip_add.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_add_dir.o: ../lib/zip_add_dir.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_add_entry.o: ../lib/zip_add_entry.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_buffer.o: ../lib/zip_buffer.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_close.o: ../lib/zip_close.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_delete.o: ../lib/zip_delete.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_dirent.o: ../lib/zip_dirent.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_dir_add.o: ../lib/zip_dir_add.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_discard.o: ../lib/zip_discard.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_entry.o: ../lib/zip_entry.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_error.o: ../lib/zip_error.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_error_clear.o: ../lib/zip_error_clear.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_error_get.o: ../lib/zip_error_get.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_error_get_sys_type.o: ../lib/zip_error_get_sys_type.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_error_strerror.o: ../lib/zip_error_strerror.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_error_to_str.o: ../lib/zip_error_to_str.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_err_str.o: ../lib/zip_err_str.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_extra_field.o: ../lib/zip_extra_field.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_extra_field_api.o: ../lib/zip_extra_field_api.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_fclose.o: ../lib/zip_fclose.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_fdopen.o: ../lib/zip_fdopen.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_filerange_crc.o: ../lib/zip_filerange_crc.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_file_add.o: ../lib/zip_file_add.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_file_error_clear.o: ../lib/zip_file_error_clear.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_file_error_get.o: ../lib/zip_file_error_get.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_file_get_comment.o: ../lib/zip_file_get_comment.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_file_get_external_attributes.o: ../lib/zip_file_get_external_attributes.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_file_get_offset.o: ../lib/zip_file_get_offset.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_file_rename.o: ../lib/zip_file_rename.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_file_replace.o: ../lib/zip_file_replace.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_file_set_comment.o: ../lib/zip_file_set_comment.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_file_set_external_attributes.o: ../lib/zip_file_set_external_attributes.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_file_set_mtime.o: ../lib/zip_file_set_mtime.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_file_strerror.o: ../lib/zip_file_strerror.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_fopen.o: ../lib/zip_fopen.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_fopen_encrypted.o: ../lib/zip_fopen_encrypted.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_fopen_index.o: ../lib/zip_fopen_index.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_fopen_index_encrypted.o: ../lib/zip_fopen_index_encrypted.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_fread.o: ../lib/zip_fread.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_get_archive_comment.o: ../lib/zip_get_archive_comment.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_get_archive_flag.o: ../lib/zip_get_archive_flag.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_get_compression_implementation.o: ../lib/zip_get_compression_implementation.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_get_encryption_implementation.o: ../lib/zip_get_encryption_implementation.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_get_file_comment.o: ../lib/zip_get_file_comment.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_get_name.o: ../lib/zip_get_name.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_get_num_entries.o: ../lib/zip_get_num_entries.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_get_num_files.o: ../lib/zip_get_num_files.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_io_util.o: ../lib/zip_io_util.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_memdup.o: ../lib/zip_memdup.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_name_locate.o: ../lib/zip_name_locate.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_new.o: ../lib/zip_new.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_open.o: ../lib/zip_open.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_rename.o: ../lib/zip_rename.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_replace.o: ../lib/zip_replace.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_set_archive_comment.o: ../lib/zip_set_archive_comment.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_set_archive_flag.o: ../lib/zip_set_archive_flag.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_set_default_password.o: ../lib/zip_set_default_password.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_set_file_comment.o: ../lib/zip_set_file_comment.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_set_file_compression.o: ../lib/zip_set_file_compression.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_set_name.o: ../lib/zip_set_name.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_source_begin_write.o: ../lib/zip_source_begin_write.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_source_buffer.o: ../lib/zip_source_buffer.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_source_call.o: ../lib/zip_source_call.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_source_close.o: ../lib/zip_source_close.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_source_commit_write.o: ../lib/zip_source_commit_write.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_source_crc.o: ../lib/zip_source_crc.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_source_deflate.o: ../lib/zip_source_deflate.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_source_error.o: ../lib/zip_source_error.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_source_file.o: ../lib/zip_source_file.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_source_filep.o: ../lib/zip_source_filep.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_source_free.o: ../lib/zip_source_free.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_source_function.o: ../lib/zip_source_function.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_source_is_deleted.o: ../lib/zip_source_is_deleted.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_source_layered.o: ../lib/zip_source_layered.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_source_open.o: ../lib/zip_source_open.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_source_pkware.o: ../lib/zip_source_pkware.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_source_read.o: ../lib/zip_source_read.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_source_remove.o: ../lib/zip_source_remove.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_source_rollback_write.o: ../lib/zip_source_rollback_write.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_source_seek.o: ../lib/zip_source_seek.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_source_seek_write.o: ../lib/zip_source_seek_write.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_source_stat.o: ../lib/zip_source_stat.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_source_supports.o: ../lib/zip_source_supports.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_source_tell.o: ../lib/zip_source_tell.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_source_tell_write.o: ../lib/zip_source_tell_write.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_source_window.o: ../lib/zip_source_window.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_source_write.o: ../lib/zip_source_write.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_source_zip.o: ../lib/zip_source_zip.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_source_zip_new.o: ../lib/zip_source_zip_new.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_stat.o: ../lib/zip_stat.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_stat_index.o: ../lib/zip_stat_index.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_stat_init.o: ../lib/zip_stat_init.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_strerror.o: ../lib/zip_strerror.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_string.o: ../lib/zip_string.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_unchange.o: ../lib/zip_unchange.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_unchange_all.o: ../lib/zip_unchange_all.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_unchange_archive.o: ../lib/zip_unchange_archive.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_unchange_data.o: ../lib/zip_unchange_data.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(OBJDIR)/zip_utf-8.o: ../lib/zip_utf-8.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF $(@:%.o=%.d) -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(OBJDIR)/$(notdir $(PCH)).d
endif
